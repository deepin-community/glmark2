From 2ac86372797bd531ef9c533cae309821bbd8bfe6 Mon Sep 17 00:00:00 2001
From: Alexandros Frantzis <alexandros.frantzis@collabora.com>
Date: Wed, 1 Nov 2023 13:17:28 +0200
Subject: [PATCH] Options,GLStateEGL,GLStateGLX: Add option to require a good
 visual config

When this option is set, failure to find a good visual config will
lead to an error rather than a warning.
---
 doc/glmark2.1.in     | 4 ++++
 src/gl-state-egl.cpp | 2 ++
 src/gl-state-glx.cpp | 2 ++
 src/options.cpp      | 6 ++++++
 src/options.h        | 1 +
 5 files changed, 15 insertions(+)

diff --git a/doc/glmark2.1.in b/doc/glmark2.1.in
index 015ba20c..10f010f0 100644
--- a/doc/glmark2.1.in
+++ b/doc/glmark2.1.in
@@ -41,6 +41,10 @@ The parameters may be defined in any order, and any omitted parameters assume a
 default value of '0' (id, stencil, samples) or '1' (red, green, blue, alpha, buffer).
 If 'id' is set to a non-zero value, all other parameters are ignored
 .TP
+\fB--good-config\fR
+Require a config that meets all the requested component requirements
+(see --visual-config)
+.TP
 \fB\-\-reuse\-context\fR
 Use a single context for all scenes
 (by default, each scene gets its own context)
diff --git a/src/gl-state-egl.cpp b/src/gl-state-egl.cpp
index f4239812..60c967ba 100644
--- a/src/gl-state-egl.cpp
+++ b/src/gl-state-egl.cpp
@@ -636,6 +636,8 @@ GLStateEGL::select_best_config(std::vector<EGLConfig>& configs)
     }
 
     if (best_score <= 0) {
+        if (Options::good_config)
+            return NULL;
         Log::warning("Unable to find a good EGL config, will continue with the best match,\n"
                      "but you should verify that the config values are acceptable.\n"
                      "Tip: Use --visual-config to request a different config\n");
diff --git a/src/gl-state-glx.cpp b/src/gl-state-glx.cpp
index de1c9f45..97dddd78 100644
--- a/src/gl-state-glx.cpp
+++ b/src/gl-state-glx.cpp
@@ -343,6 +343,8 @@ GLStateGLX::select_best_config(std::vector<GLXFBConfig> configs)
     }
 
     if (best_score <= 0) {
+        if (Options::good_config)
+            return NULL;
         Log::warning("Unable to find a good GLX FB config, will continue with the best match,\n"
                      "but you should verify that the config values are acceptable.\n"
                      "Tip: Use --visual-config to request a different config\n");
diff --git a/src/options.cpp b/src/options.cpp
index 8d1ec16e..5159b394 100644
--- a/src/options.cpp
+++ b/src/options.cpp
@@ -45,6 +45,7 @@ bool Options::run_forever = false;
 bool Options::annotate = false;
 bool Options::offscreen = false;
 GLVisualConfig Options::visual_config;
+bool Options::good_config = false;
 Options::Results Options::results = Options::ResultsFps;
 std::string Options::results_file;
 std::vector<Options::WindowSystemOption> Options::winsys_options;
@@ -60,6 +61,7 @@ static struct option long_options[] = {
     {"swap-mode", 1, 0, 0},
     {"off-screen", 0, 0, 0},
     {"visual-config", 1, 0, 0},
+    {"good-config", 0, 0, 0},
     {"reuse-context", 0, 0, 0},
     {"run-forever", 0, 0, 0},
     {"size", 1, 0, 0},
@@ -216,6 +218,8 @@ Options::print_help()
            "                         default value of '0' (id, stencil, samples) or '1' (red,\n"
            "                         green, blue, alpha, buffer). If 'id' is set to a non-zero\n"
            "                         value, all other parameters are ignored\n"
+           "      --good-config      Require a config that meets all the requested component\n"
+           "                         requirements (see --visual-config)\n"
            "      --reuse-context    Use a single context for all scenes\n"
            "                         (by default, each scene gets its own context)\n"
            "  -s, --size WxH         Size of the output window (default: 800x600)\n"
@@ -281,6 +285,8 @@ Options::parse_args(int argc, char **argv)
             Options::offscreen = true;
         else if (!strcmp(optname, "visual-config"))
             Options::visual_config = GLVisualConfig(optarg);
+        else if (!strcmp(optname, "good-config"))
+            Options::good_config = true;
         else if (!strcmp(optname, "reuse-context"))
             Options::reuse_context = true;
         else if (c == 's' || !strcmp(optname, "size"))
diff --git a/src/options.h b/src/options.h
index b5cfbfe6..a89df70a 100644
--- a/src/options.h
+++ b/src/options.h
@@ -75,6 +75,7 @@ struct Options {
     static bool annotate;
     static bool offscreen;
     static GLVisualConfig visual_config;
+    static bool good_config;
     static Results results;
     static std::string results_file;
     static std::vector<WindowSystemOption> winsys_options;
